@page "/cars"
@page "/cars/{id}"
@inject Services.CarService carService
@using ViewModels
<h3>Cars</h3>
@if (cars == null)
{
    <p><em>Not found</em></p>

}
else
{

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Brand</th>
                <th>Price</th>
                <th>Price per hour</th>
                <th>CarTypeId</th>
                <th>Year</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var car in cars)
            {
                <tr>
                    <td>@car.id</td>
                    <td>@car.brand</td>
                    <td>@car.price</td>
                    <td>@car.pricePerHour</td>
                    <td>@car.carTypeId</td>
                    <td>@car.year</td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private int _id;
    [Parameter]
    public string Id
    {
        get
        {
            return _id.ToString();
        }
        set
        {
            try
            {
                _id = Int32.Parse(value);
            }
            catch
            {
                _id = 0;
            }
        }
    }

    List<CarViewModel> cars;
    protected override async Task OnInitializedAsync()
    {
        int id = Int32.Parse(Id);
        if (id == 0)
            cars = await carService.GetCarsAsync();
        else if (id > 0)
        {
            CarViewModel car = await carService.GetCarsByIdAsync(id);
            if(car!=null)
            {
                cars = new List<CarViewModel>();
                cars.Add(car);
            }            
        }

    }
}
