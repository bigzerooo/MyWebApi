@inject UI.Services.CarStateService carStateService
@inject NavigationManager navigationManager
@inject IStringLocalizer<AddCarState> L

@attribute [Authorize(Roles = "admin")]
@page "/carstates/add"

<h3>@L["Add car state"]</h3>
<hr />

<EditForm class="d-flex flex-column w-25" Model="@CarState" OnValidSubmit="@AddAsync">

    <FluentValidator />
    <ValidationSummary />
    <ErrorSummary Errors="Errors" />

    <MatTextField @bind-Value="@CarState.State" Label="@L["Car state"]" />

    <button type="submit" class="btn btn-sm btn-primary">@L["Add"]</button>

</EditForm>

@code {
    CarStateViewModel CarState { get; set; }

    IEnumerable<string> Errors { get; set; }

    protected override void OnInitialized()
    {
        CarState = new CarStateViewModel();
        Errors = new string[0];
    }

    private async Task AddAsync()
    {
        var result = await carStateService.AddCarStateAsync(CarState);

        if (result.IsSuccessful)
        {
            navigationManager.NavigateTo("/carstates");
        }
        else
        {
            Errors = result.Errors;
        }
    }
}
