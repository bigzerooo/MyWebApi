@inject UI.Services.CarTypeService carTypeService
@inject NavigationManager  navigationManager
@inject IStringLocalizer<EditCarType> L

@attribute [Authorize(Roles = "admin")]
@page "/cartypes/update/{id}"

<h3>@L["Edit car type"]</h3>
<hr />

<EditForm class="d-flex flex-column w-25" Model="@CarType" OnValidSubmit="@EditAsync">

    <FluentValidator />
    <ValidationSummary />
    <ErrorSummary Errors="Errors" />

    <MatTextField @bind-Value="@CarType.Type" Label=@L["Car type"]></MatTextField>

    <button type="submit" class="btn btn-sm btn-primary">@L["Edit"]</button>

</EditForm>

@code {
    [Parameter]
    public string Id { get; set; }

    CarTypeViewModel CarType { get; set; }

    IEnumerable<string> Errors { get; set; }

    protected override async Task OnInitializedAsync()
    {
        CarType = new CarTypeViewModel();
        Errors = new string[0];

        int intId = Int32.Parse(Id);
        CarType.Type = await carTypeService.GetCarTypeByIdAsync(intId);
        CarType.Id = intId;
    }

    private async Task EditAsync()
    {
        var result = await carTypeService.UpdateCarTypeAsync(CarType);

        if (result.IsSuccessful)
        {
            navigationManager.NavigateTo("/cartypes");
        }
        else
        {
            Errors = result.Errors;
        }
    }
}
