@inject UI.Services.AccountService accountService
@inject NavigationManager NavigationManager
@inject IStringLocalizer<Login> L

@page "/login"

<h3>@L["Login"]</h3>
<hr />

<EditForm class="d-flex flex-column w-25" Model="@User" OnValidSubmit="@LoginAsync">

    <FluentValidator />
    <ValidationSummary />
    @if (!string.IsNullOrWhiteSpace(Error))
    {
        <ul class="validation-errors">
            <li class="validation-message">@Error</li>
        </ul>
    }

    <MatTextField @bind-Value="User.UserName" Label="@L["Username"]" />
    <MatTextField @bind-Value="User.Password" Label="@L["Password"]" Type="password" />
    <MatCheckbox @bind-Value="User.RememberMe" Label="@L["Remember me"]" />

    <button type="submit" class="btn btn-sm btn-primary">@L["Login button"]</button>

</EditForm>

@code {
    MyUserLoginViewModel User { get; set; }

    string Error { get; set; }

    protected override void OnInitialized()
    {
        User = new MyUserLoginViewModel();
    }

    private async Task LoginAsync()
    {
        var result = await accountService.LoginAsync(User);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error;
        }
    }
}
